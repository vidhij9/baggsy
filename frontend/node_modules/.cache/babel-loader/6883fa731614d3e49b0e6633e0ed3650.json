{"ast":null,"code":"var _jsxFileName = \"/Users/mannu/Desktop/baggsy/frontend/src/components/BagRegistration.jsx\";\nimport React, { useState } from \"react\";\nimport { registerBag } from \"../api/api\";\nconst BagRegistration = () => {\n  const [qrCode, setQrCode] = useState(\"\");\n  const [bagType, setBagType] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const handleRegister = async () => {\n    if (!qrCode || !bagType) {\n      setMessage(\"QR Code and Bag Type are required!\");\n      return;\n    }\n    try {\n      const response = await registerBag({\n        qr_code: qrCode,\n        bag_type: bagType\n      });\n      setMessage(response.data.message);\n      setQrCode(\"\");\n      setBagType(\"\");\n    } catch (error) {\n      var _error$response, _error$response$data;\n      setMessage(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || \"Something went wrong\");\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bg-lightGreen p-6 rounded-lg shadow-md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"text-2xl font-bold text-darkGreen mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, \"Register Bag\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Enter QR Code\",\n    value: qrCode,\n    onChange: e => setQrCode(e.target.value),\n    className: \"border rounded w-full p-2 mb-4 focus:outline-none focus:ring focus:ring-green\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"select\", {\n    value: bagType,\n    onChange: e => setBagType(e.target.value),\n    className: \"border rounded w-full p-2 mb-4 focus:outline-none focus:ring focus:ring-green\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, \"Select Bag Type\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Parent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, \"Parent\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Child\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, \"Child\")), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleRegister,\n    className: \"bg-green text-white px-4 py-2 rounded shadow hover:bg-darkGreen transition\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, \"Register\"), message && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-green mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 19\n    }\n  }, message));\n};\nexport default BagRegistration;","map":{"version":3,"names":["React","useState","registerBag","BagRegistration","qrCode","setQrCode","bagType","setBagType","message","setMessage","handleRegister","response","qr_code","bag_type","data","error","_error$response","_error$response$data","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick"],"sources":["/Users/mannu/Desktop/baggsy/frontend/src/components/BagRegistration.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { registerBag } from \"../api/api\";\n\nconst BagRegistration = () => {\n  const [qrCode, setQrCode] = useState(\"\");\n  const [bagType, setBagType] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  const handleRegister = async () => {\n    if (!qrCode || !bagType) {\n      setMessage(\"QR Code and Bag Type are required!\");\n      return;\n    }\n\n    try {\n      const response = await registerBag({ qr_code: qrCode, bag_type: bagType });\n      setMessage(response.data.message);\n      setQrCode(\"\");\n      setBagType(\"\");\n    } catch (error) {\n      setMessage(error.response?.data?.error || \"Something went wrong\");\n    }\n  };\n\n  return (\n    <div className=\"bg-lightGreen p-6 rounded-lg shadow-md\">\n      <h2 className=\"text-2xl font-bold text-darkGreen mb-4\">Register Bag</h2>\n      <input\n        type=\"text\"\n        placeholder=\"Enter QR Code\"\n        value={qrCode}\n        onChange={(e) => setQrCode(e.target.value)}\n        className=\"border rounded w-full p-2 mb-4 focus:outline-none focus:ring focus:ring-green\"\n      />\n      <select\n        value={bagType}\n        onChange={(e) => setBagType(e.target.value)}\n        className=\"border rounded w-full p-2 mb-4 focus:outline-none focus:ring focus:ring-green\"\n      >\n        <option value=\"\">Select Bag Type</option>\n        <option value=\"Parent\">Parent</option>\n        <option value=\"Child\">Child</option>\n      </select>\n      <button\n        onClick={handleRegister}\n        className=\"bg-green text-white px-4 py-2 rounded shadow hover:bg-darkGreen transition\"\n      >\n        Register\n      </button>\n      {message && <p className=\"text-green mt-4\">{message}</p>}\n    </div>\n  );\n};\n\nexport default BagRegistration;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}