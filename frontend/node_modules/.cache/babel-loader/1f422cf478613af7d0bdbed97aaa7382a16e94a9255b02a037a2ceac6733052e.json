{"ast":null,"code":"var _jsxFileName = \"/Users/mannu/Desktop/baggsy/frontend/src/components/Login.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport axios from 'axios';\nimport { motion } from 'framer-motion';\nimport { SparklesIcon } from '@heroicons/react/24/solid';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [error, setError] = useState(null); // Initialize error as null\n\n  const login = async () => {\n    setError(null); // Clear any previous errors when the login is attempted\n\n    try {\n      // Simulate an API call or some login logic\n      // Replace this with your actual login logic\n      const response = await simulateLogin();\n      if (response.success) {\n        // Handle successful login (e.g., redirect)\n        console.log(\"Login successful!\");\n      } else {\n        setError(response.message); //set error from response\n      }\n    } catch (err) {\n      setError(\"An unexpected error occurred during login.\");\n      console.error(err);\n    }\n  };\n  //Function to test\n  async function simulateLogin() {\n    // Simulate network delay\n    await new Promise(resolve => setTimeout(resolve, 1000));\n\n    // Simulate a 50% chance of login success\n    const success = Math.random() > 0.5;\n    if (success) {\n      return {\n        success: true\n      };\n    } else {\n      return {\n        success: false,\n        message: \"Invalid username or password.\"\n      };\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center justify-center min-h-screen bg-gray-100\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-8 rounded-lg shadow-md w-96\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl font-bold mb-6 text-center\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: login // Ensure this references the defined login function\n        ,\n        className: \"w-full bg-primary text-white py-3 rounded-lg hover:bg-green-700 transition duration-300 flex items-center justify-center\",\n        children: [/*#__PURE__*/_jsxDEV(SparklesIcon, {\n          className: \"w-5 h-5 mr-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), \"Login to Baggsy\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-500 text-center mt-4\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"A8i/78Fx3FIozbyR2zwnz0NK35o=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","axios","motion","SparklesIcon","toast","jsxDEV","_jsxDEV","Login","_s","error","setError","useState","login","response","simulateLogin","success","console","log","message","err","Promise","resolve","setTimeout","Math","random","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/mannu/Desktop/baggsy/frontend/src/components/Login.js"],"sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport { motion } from 'framer-motion';\nimport { SparklesIcon } from '@heroicons/react/24/solid';\nimport { toast } from 'react-toastify';\n\nfunction Login() {\n  const [error, setError] = useState(null); // Initialize error as null\n\n  const login = async () => {\n    setError(null); // Clear any previous errors when the login is attempted\n\n    try {\n      // Simulate an API call or some login logic\n      // Replace this with your actual login logic\n      const response = await simulateLogin(); \n\n      if (response.success) {\n        // Handle successful login (e.g., redirect)\n        console.log(\"Login successful!\");\n      } else {\n          setError(response.message); //set error from response\n      }\n    } catch (err) {\n      setError(\"An unexpected error occurred during login.\");\n      console.error(err);\n    }\n  };\n  //Function to test\n    async function simulateLogin() {\n      // Simulate network delay\n      await new Promise(resolve => setTimeout(resolve, 1000));\n  \n      // Simulate a 50% chance of login success\n      const success = Math.random() > 0.5;\n      if (success) {\n        return { success: true };\n      } else {\n        return { success: false, message: \"Invalid username or password.\" };\n      }\n    }\n\n  return (\n    <div className=\"flex flex-col items-center justify-center min-h-screen bg-gray-100\">\n      <div className=\"bg-white p-8 rounded-lg shadow-md w-96\">\n        <h1 className=\"text-3xl font-bold mb-6 text-center\">Login</h1>\n        {/* Your form inputs here */}\n\n        {/* Login Button */}\n        <button\n          onClick={login} // Ensure this references the defined login function\n          className=\"w-full bg-primary text-white py-3 rounded-lg hover:bg-green-700 transition duration-300 flex items-center justify-center\"\n        >\n          <SparklesIcon className=\"w-5 h-5 mr-2\" />\n          Login to Baggsy\n        </button>\n\n        {/* Error Display */}\n        {error && <p className=\"text-red-500 text-center mt-4\">{error}</p>}\n      </div>\n    </div>\n  );\n}\n\nexport default Login;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,eAAe;AACtC,SAASC,YAAY,QAAQ,2BAA2B;AACxD,SAASC,KAAK,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE1C,MAAMC,KAAK,GAAG,MAAAA,CAAA,KAAY;IACxBF,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;IAEhB,IAAI;MACF;MACA;MACA,MAAMG,QAAQ,GAAG,MAAMC,aAAa,CAAC,CAAC;MAEtC,IAAID,QAAQ,CAACE,OAAO,EAAE;QACpB;QACAC,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;MAClC,CAAC,MAAM;QACHP,QAAQ,CAACG,QAAQ,CAACK,OAAO,CAAC,CAAC,CAAC;MAChC;IACF,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZT,QAAQ,CAAC,4CAA4C,CAAC;MACtDM,OAAO,CAACP,KAAK,CAACU,GAAG,CAAC;IACpB;EACF,CAAC;EACD;EACE,eAAeL,aAAaA,CAAA,EAAG;IAC7B;IACA,MAAM,IAAIM,OAAO,CAACC,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAE,IAAI,CAAC,CAAC;;IAEvD;IACA,MAAMN,OAAO,GAAGQ,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG;IACnC,IAAIT,OAAO,EAAE;MACX,OAAO;QAAEA,OAAO,EAAE;MAAK,CAAC;IAC1B,CAAC,MAAM;MACL,OAAO;QAAEA,OAAO,EAAE,KAAK;QAAEG,OAAO,EAAE;MAAgC,CAAC;IACrE;EACF;EAEF,oBACEZ,OAAA;IAAKmB,SAAS,EAAC,oEAAoE;IAAAC,QAAA,eACjFpB,OAAA;MAAKmB,SAAS,EAAC,wCAAwC;MAAAC,QAAA,gBACrDpB,OAAA;QAAImB,SAAS,EAAC,qCAAqC;QAAAC,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAI9DxB,OAAA;QACEyB,OAAO,EAAEnB,KAAM,CAAC;QAAA;QAChBa,SAAS,EAAC,0HAA0H;QAAAC,QAAA,gBAEpIpB,OAAA,CAACH,YAAY;UAACsB,SAAS,EAAC;QAAc;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,mBAE3C;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EAGRrB,KAAK,iBAAIH,OAAA;QAAGmB,SAAS,EAAC,+BAA+B;QAAAC,QAAA,EAAEjB;MAAK;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/D;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACtB,EAAA,CAxDQD,KAAK;AAAAyB,EAAA,GAALzB,KAAK;AA0Dd,eAAeA,KAAK;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}